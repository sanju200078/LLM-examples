# ============================================
# 1. Install dependencies
# ============================================
!pip install SpeechRecognition pydub transformers accelerate sentencepiece --quiet

# ============================================
# 2. Import libraries
# ============================================
import speech_recognition as sr
from pydub import AudioSegment
from google.colab import files
from transformers import pipeline

# ============================================
# 3. Upload MP3 file
# ============================================
print("üé§ Please upload your MP3 file")
uploaded = files.upload()
audio_file = list(uploaded.keys())[0]

# ============================================
# 4. Convert MP3 to WAV (for SpeechRecognition)
# ============================================
sound = AudioSegment.from_mp3(audio_file)
wav_file = audio_file.replace(".mp3", ".wav")
sound.export(wav_file, format="wav")

# ============================================
# 5. Speech-to-Text (Google STT)
# ============================================
recognizer = sr.Recognizer()
with sr.AudioFile(wav_file) as source:
    audio_data = recognizer.record(source)

try:
    query = recognizer.recognize_google(audio_data)
    print("‚úÖ Voice to Text:", query)
except Exception as e:
    print("‚ùå Could not recognize speech:", e)
    query = ""

# ============================================
# 6. QA Model (distilbert Q&A)
# ============================================
if query:
    print("\nü§ñ Generating English Answer...\n")

    # Use a summarization / QA model instead of FLAN
    qa_model = pipeline("text-generation", model="gpt2", device=-1)  # small, free model

    prompt_en = f"Explain clearly in simple English:\n{query}"
    result_en = qa_model(prompt_en, max_new_tokens=150, truncation=True)
    english_answer = result_en[0]['generated_text']
    print("üìñ English Answer:\n", english_answer)

    # ============================================
    # 7. Translation (English ‚Üí Hindi)
    # ============================================
    print("\nüåè Translating to Hindi...\n")
    translator = pipeline("translation", model="Helsinki-NLP/opus-mt-en-hi")
    hindi_answer = translator(english_answer, max_length=200)[0]['translation_text']
    print("üåè ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§â‡§§‡•ç‡§§‡§∞:\n", hindi_answer)

else:
    print("‚ö†Ô∏è No query detected.")
--------------------------------------------------------------------------------------------
Output
-------------------------------------------------------------------------------------------
lease upload your MP3 file
No file chosen Upload widget is only available when the cell has been executed in the current browser session. Please rerun this cell to enable.
Saving Record (online-voice-recorder.com) (2).mp3 to Record (online-voice-recorder.com) (2) (2).mp3
‚úÖ Voice to Text: explain about NATO NATO

ü§ñ Generating English Answer...

config.json:‚Äá100%
‚Äá665/665‚Äá[00:00<00:00,‚Äá72.4kB/s]
model.safetensors:‚Äá100%
‚Äá548M/548M‚Äá[00:15<00:00,‚Äá32.7MB/s]
generation_config.json:‚Äá100%
‚Äá124/124‚Äá[00:00<00:00,‚Äá9.56kB/s]
tokenizer_config.json:‚Äá100%
‚Äá26.0/26.0‚Äá[00:00<00:00,‚Äá1.86kB/s]
vocab.json:‚Äá100%
‚Äá1.04M/1.04M‚Äá[00:00<00:00,‚Äá6.18MB/s]
merges.txt:‚Äá100%
‚Äá456k/456k‚Äá[00:00<00:00,‚Äá2.72MB/s]
tokenizer.json:‚Äá100%
‚Äá1.36M/1.36M‚Äá[00:00<00:00,‚Äá8.11MB/s]
Device set to use cpu
Setting `pad_token_id` to `eos_token_id`:50256 for open-end generation.
üìñ English Answer:
 Explain clearly in simple English:
explain about NATO NATO is an alliance of nations that share a common cause. In the name of NATO, we are a nation that stands for freedom, openness and security. We are open, inclusive, open and compassionate. We have strong values. We are tolerant and democratic. Our people are good people, good people, and decent people. We are a democratic country and we are a democratic partner. We are free. We are a free country.

In the context of the above, it seems that if it were not for the fact that the "people" of the United States and the NATO alliance are not the same people, perhaps the entire NATO alliance would not exist.

As I outlined after the NATO summit, the relationship between the United States and

üåè Translating to Hindi...

config.json:‚Äá
‚Äá1.39k/?‚Äá[00:00<00:00,‚Äá88.6kB/s]
pytorch_model.bin:‚Äá100%
‚Äá306M/306M‚Äá[00:04<00:00,‚Äá68.5MB/s]
generation_config.json:‚Äá100%
‚Äá293/293‚Äá[00:00<00:00,‚Äá17.6kB/s]
model.safetensors:‚Äá100%
‚Äá306M/306M‚Äá[00:06<00:00,‚Äá20.1MB/s]
tokenizer_config.json:‚Äá100%
‚Äá44.0/44.0‚Äá[00:00<00:00,‚Äá2.64kB/s]
source.spm:‚Äá100%
‚Äá812k/812k‚Äá[00:00<00:00,‚Äá56.9MB/s]
target.spm:‚Äá100%
‚Äá1.07M/1.07M‚Äá[00:00<00:00,‚Äá47.3MB/s]
vocab.json:‚Äá
‚Äá2.10M/?‚Äá[00:00<00:00,‚Äá45.3MB/s]
/usr/local/lib/python3.12/dist-packages/transformers/models/marian/tokenization_marian.py:175: UserWarning: Recommended: pip install sacremoses.
  warnings.warn("Recommended: pip install sacremoses.")
Device set to use cuda:0
üåè ‡§π‡§ø‡§Ç‡§¶‡•Ä ‡§â‡§§‡•ç‡§§‡§∞:
 ‡§∏‡§∞‡§≤ ‡§Ö‡§Ç‡§ó‡•ç‡§∞‡•á‡§ú‡§º‡•Ä ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§™‡§∑‡•ç‡§ü ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§µ‡•ç‡§Ø‡§æ‡§ñ‡•ç‡§Ø‡§æ ‡§ï‡§∞‡•á‡§Ç: NATO ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§è‡§ï ‡§∏‡§æ‡§ù‡§æ ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞ ‡§π‡•à. NATO ‡§ï‡•á ‡§®‡§æ‡§Æ ‡§∏‡•á ‡§π‡§Æ ‡§è‡§ï ‡§ê‡§∏‡•Ä ‡§∞‡§æ‡§∑‡•ç‡§ü‡•ç‡§∞ ‡§π‡•à‡§Ç ‡§ú‡•ã ‡§∏‡•ç‡§µ‡§§‡§Ç‡§§‡•ç‡§∞‡§§‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ñ‡§°‡§º‡§æ ‡§π‡•à, ‡§ñ‡•Å‡§≤‡•á‡§™‡§® ‡§î‡§∞ ‡§ï‡§∞‡•Å‡§£‡§æ‡§Æ‡§Ø ‡§π‡•à. ‡§π‡§Æ ‡§Æ‡§ú‡§¨‡•Ç‡§§ ‡§Æ‡§æ‡§® ‡§∞‡§π‡•á ‡§π‡•à‡§Ç. ‡§π‡§Æ ‡§∏‡§π‡§®‡§∂‡•Ä‡§≤ ‡§π‡•à‡§Ç ‡§î‡§∞ ‡§≤‡•ã‡§ï‡§§‡§Ç‡§§‡•ç‡§∞‡•Ä‡§Ø ‡§≤‡•ã‡§ó ‡§π‡•à‡§Ç. ‡§π‡§Æ‡§æ‡§∞‡•á ‡§≤‡•ã‡§ó ‡§Ö‡§ö‡•ç‡§õ‡•á ‡§≤‡•ã‡§ó ‡§π‡•à‡§Ç, ‡§î‡§∞ ‡§µ‡§ø‡§¶‡•á‡§∂‡•Ä ‡§≤‡•ã‡§ó ‡§π‡•à‡§Ç. ‡§π‡§Æ ‡§è‡§ï ‡§¶‡•á‡§∂ ‡§π‡•à‡§Ç, ‡§î‡§∞ ‡§π‡§Æ ‡§è‡§ï ‡§≤‡•ã‡§ï‡§§‡§æ‡§Ç‡§§‡•ç‡§∞‡§ø‡§ï ‡§π‡•à‡§Ç. ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§¶‡•á‡§∂ ‡§π‡•à‡§Ç. "‡§ì. ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§¶‡•á‡§∂ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§¨‡§æ‡§§ ‡§®‡§π‡•Ä‡§Ç ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç, ‡§î‡§∞ ‡§´‡§ø‡§∞ ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§¶‡•á‡§∂ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§¨‡§æ‡§§ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç. ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§¶‡•á‡§∂ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§¨‡§§‡§æ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç. ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§¶‡•á‡§∂ ‡§Æ‡•á‡§Ç ‡§¨‡§æ‡§§ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç. ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§¶‡•á‡§∂ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§¨‡§§‡§æ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç, ‡§î‡§∞ ‡§´‡§ø‡§∞ ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§¶‡•á‡§∂ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§¨‡§æ‡§§ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç. ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§¶‡•á‡§∂ ‡§Æ‡•á‡§Ç ‡§¨‡§æ‡§§ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç. ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§¶‡•á‡§∂ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§¨‡§æ‡§§ ‡§ï‡§∞ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç. ‡§π‡§Æ ‡§è‡§ï ‡§π‡•Ä ‡§¶‡•á‡§∂ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§¨‡§§‡§æ ‡§∞‡§π‡•á ‡§π‡•à‡§Ç ‡§ï‡§ø ‡§Ø‡§π ‡§π‡•à ‡§ï‡§ø
